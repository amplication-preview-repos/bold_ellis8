/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GoodsIssue as PrismaGoodsIssue } from "@prisma/client";

export class GoodsIssueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GoodsIssueCountArgs, "select">
  ): Promise<number> {
    return this.prisma.goodsIssue.count(args);
  }

  async goodsIssues(
    args: Prisma.GoodsIssueFindManyArgs
  ): Promise<PrismaGoodsIssue[]> {
    return this.prisma.goodsIssue.findMany(args);
  }
  async goodsIssue(
    args: Prisma.GoodsIssueFindUniqueArgs
  ): Promise<PrismaGoodsIssue | null> {
    return this.prisma.goodsIssue.findUnique(args);
  }
  async createGoodsIssue(
    args: Prisma.GoodsIssueCreateArgs
  ): Promise<PrismaGoodsIssue> {
    return this.prisma.goodsIssue.create(args);
  }
  async updateGoodsIssue(
    args: Prisma.GoodsIssueUpdateArgs
  ): Promise<PrismaGoodsIssue> {
    return this.prisma.goodsIssue.update(args);
  }
  async deleteGoodsIssue(
    args: Prisma.GoodsIssueDeleteArgs
  ): Promise<PrismaGoodsIssue> {
    return this.prisma.goodsIssue.delete(args);
  }
}
